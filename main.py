import logging
from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup, InputFile
from telegram.ext import Updater, CommandHandler, CallbackQueryHandler, CallbackContext, MessageHandler, Filters
import os

# –ù–∞—Å—Ç—Ä–æ–π–∫–∏
TOKEN = 'YOUR_TELEGRAM_BOT_TOKEN'
REG_CHANNEL = '-1002739343436'  # –ö–∞–Ω–∞–ª —Å —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è–º–∏
DEPOSIT_CHANNEL = '-1002690483167'  # –ö–∞–Ω–∞–ª —Å –¥–µ–ø–æ–∑–∏—Ç–∞–º–∏
SUPPORT_LINK = 'https://t.me/Maksimmm16'  # –°—Å—ã–ª–∫–∞ –Ω–∞ –ø–æ–¥–¥–µ—Ä–∂–∫—É
VIP_BOT_LINK = 'https://t.me/TESTVIPP_BOT'  # –°—Å—ã–ª–∫–∞ –Ω–∞ VIP-–±–æ—Ç–∞
CHANNEL_LINK = 'https://t.me/your_channel'  # –°—Å—ã–ª–∫–∞ –Ω–∞ –∫–∞–Ω–∞–ª (–Ω–µ —É–∫–∞–∑–∞–Ω–∞, –æ—Å—Ç–∞–≤–∏–ª –∑–∞–≥–ª—É—à–∫—É)
PARTNER_LINK = 'https://tavern-bot.onrender.com'  # –ü–∞—Ä—Ç–Ω–µ—Ä—Å–∫–∞—è —Å—Å—ã–ª–∫–∞
MINI_APP_LINK = 'https://t.me/Tavern_Rulet_bot/myapp'  # –°—Å—ã–ª–∫–∞ –Ω–∞ MiniApp

# –ü—É—Ç—å –∫ –ø–∞–ø–∫–µ —Å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è–º–∏
IMAGE_FOLDER = r'C:\Users\Maks\Desktop\Traffic\BOT\telegram-casino-bot\rturtyk'

# –£—Ä–æ–≤–Ω–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
USER_LEVELS = {}

# –í–∫–ª—é—á–∏–º –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ
logging.basicConfig(
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s', level=logging.INFO
)
logger = logging.getLogger(__name__)

# –ü—É—Ç–∏ –∫ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è–º
IMAGE_PATHS = {
    'start': os.path.join(IMAGE_FOLDER, 'start.jpg'),
    'help': os.path.join(IMAGE_FOLDER, 'help.jpg'),
    'level1': os.path.join(IMAGE_FOLDER, 'level1.jpg'),
    'level2': os.path.join(IMAGE_FOLDER, 'level2.jpg'),
    'vip': os.path.join(IMAGE_FOLDER, 'vip.jpg')
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏/–¥–µ–ø–æ–∑–∏—Ç–∞
def check_user_in_channel(user_id: int, channel: str, context: CallbackContext) -> bool:
    try:
        messages = context.bot.get_chat_history(chat_id=channel, limit=100)
        for message in messages:
            if str(user_id) in message.text:
                return True
    except Exception as e:
        logger.error(f"Error checking channel: {e}")
    return False

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start
def start(update: Update, context: CallbackContext) -> None:
    user_id = update.effective_user.id
    USER_LEVELS[user_id] = 0  # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –Ω–∞—á–∞–ª—å–Ω—ã–π —É—Ä–æ–≤–µ–Ω—å
    
    keyboard = [
        [InlineKeyboardButton("üöÄ –ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è", url=PARTNER_LINK)],
        [InlineKeyboardButton("‚úÖ –Ø –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–ª—Å—è", callback_data='check_reg')],
        [InlineKeyboardButton("‚ùì –ù—É–∂–Ω–∞ –ø–æ–º–æ—â—å", callback_data='help')]
    ]
    reply_markup = InlineKeyboardMarkup(keyboard)
    
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ (–µ—Å–ª–∏ –µ—Å—Ç—å)
    photo = None
    if os.path.exists(IMAGE_PATHS['start']):
        photo = InputFile(IMAGE_PATHS['start'])
    
    if photo:
        update.message.reply_photo(
            photo=photo,
            caption="*üî• –ü–µ—Ä–≤—ã–µ 50 –∏–≥—Ä–æ–∫–æ–≤ –ø–æ–ª—É—á–∞—é—Ç +1 –±–µ—Å–ø–ª–∞—Ç–Ω–æ–µ –≤—Ä–∞—â–µ–Ω–∏–µ\!*",
            parse_mode='MarkdownV2',
            reply_markup=reply_markup
        )
    else:
        update.message.reply_text(
            "*üî• –ü–µ—Ä–≤—ã–µ 50 –∏–≥—Ä–æ–∫–æ–≤ –ø–æ–ª—É—á–∞—é—Ç +1 –±–µ—Å–ø–ª–∞—Ç–Ω–æ–µ –≤—Ä–∞—â–µ–Ω–∏–µ\!*",
            parse_mode='MarkdownV2',
            reply_markup=reply_markup
        )

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Ä–∞–∑–¥–µ–ª–∞ –ø–æ–º–æ—â–∏
def help_section(update: Update, context: CallbackContext) -> None:
    query = update.callback_query
    query.answer()
    
    keyboard = [
        [InlineKeyboardButton("üìû –ú–µ–Ω–µ–¥–∂–µ—Ä", url=SUPPORT_LINK)],
        [InlineKeyboardButton("üîô –ù–∞–∑–∞–¥", callback_data='back_to_start')]
    ]
    reply_markup = InlineKeyboardMarkup(keyboard)
    
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ (–µ—Å–ª–∏ –µ—Å—Ç—å)
    photo = None
    if os.path.exists(IMAGE_PATHS['help']):
        photo = InputFile(IMAGE_PATHS['help'])
    
    if photo:
        query.message.reply_photo(
            photo=photo,
            caption="*üõ† –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Ç–æ–ª—å–∫–æ –Ω–æ–≤—ã–π –∞–∫–∫–∞—É–Ω—Ç, –∏–Ω–∞—á–µ –±–æ—Ç –Ω–µ —É–≤–∏–¥–∏—Ç —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é\!*",
            parse_mode='MarkdownV2',
            reply_markup=reply_markup
        )
    else:
        query.message.reply_text(
            "*üõ† –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Ç–æ–ª—å–∫–æ –Ω–æ–≤—ã–π –∞–∫–∫–∞—É–Ω—Ç, –∏–Ω–∞—á–µ –±–æ—Ç –Ω–µ —É–≤–∏–¥–∏—Ç —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é\!*",
            parse_mode='MarkdownV2',
            reply_markup=reply_markup
        )

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏
def check_registration(update: Update, context: CallbackContext) -> None:
    query = update.callback_query
    user_id = update.effective_user.id
    query.answer()
    
    if check_user_in_channel(user_id, REG_CHANNEL, context):
        USER_LEVELS[user_id] = 1  # –ü–µ—Ä–µ–≤–æ–¥–∏–º –Ω–∞ —É—Ä–æ–≤–µ–Ω—å 1
        show_level(update, context, 1)
    else:
        keyboard = [
            [InlineKeyboardButton("üîÑ –ü–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å —Å–Ω–æ–≤–∞", url=PARTNER_LINK)],
            [InlineKeyboardButton("üîô –ù–∞–∑–∞–¥", callback_data='back_to_start')]
        ]
        reply_markup = InlineKeyboardMarkup(keyboard)
        
        query.edit_message_text(
            text="*‚ùå –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω–∞\! –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞ –∏–ª–∏ –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –≤ –ø–æ–¥–¥–µ—Ä–∂–∫—É\.*",
            parse_mode='MarkdownV2',
            reply_markup=reply_markup
        )

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–µ–ø–æ–∑–∏—Ç–∞
def check_deposit(update: Update, context: CallbackContext) -> None:
    query = update.callback_query
    user_id = update.effective_user.id
    query.answer()
    
    current_level = USER_LEVELS.get(user_id, 0)
    
    if check_user_in_channel(user_id, DEPOSIT_CHANNEL, context):
        USER_LEVELS[user_id] = current_level + 1  # –ü–æ–≤—ã—à–∞–µ–º —É—Ä–æ–≤–µ–Ω—å
        show_level(update, context, current_level + 1)
    else:
        keyboard = [
            [InlineKeyboardButton("üí≥ –ü–æ–ø–æ–ª–Ω–∏—Ç—å –±–∞–ª–∞–Ω—Å", url=PARTNER_LINK)],
            [InlineKeyboardButton("üîÑ –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Å–Ω–æ–≤–∞", callback_data=f'check_deposit_{current_level}')],
            [InlineKeyboardButton("üîô –ù–∞–∑–∞–¥", callback_data=f'level_{current_level}')]
        ]
        reply_markup = InlineKeyboardMarkup(keyboard)
        
        query.edit_message_text(
            text=f"*‚ö†Ô∏è –î–µ–ø–æ–∑–∏—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω\! –ú–∏–Ω–∏–º—É–º {500 * current_level}‚ÇΩ –¥–ª—è –£—Ä–æ–≤–Ω—è {current_level + 1}\.*",
            parse_mode='MarkdownV2',
            reply_markup=reply_markup
        )

# –ü–æ–∫–∞–∑–∞—Ç—å —É—Ä–æ–≤–µ–Ω—å
def show_level(update: Update, context: CallbackContext, level: int) -> None:
    query = update.callback_query
    
    level_texts = {
        1: ("üéâ 3 –±–µ—Å–ø–ª–∞—Ç–Ω—ã—Ö –≤—Ä–∞—â–µ–Ω–∏—è\! –í—ã–∏–≥—Ä—ã—à–∏ –¥–æ 5000‚ÇΩ\!", "üé∞ –ö—Ä—É—Ç–∏—Ç—å —Ä—É–ª–µ—Ç–∫—É", "üíé VIP\-–¥–æ—Å—Ç—É–ø"),
        2: ("üí∞ –£—Ä–æ–≤–µ–Ω—å 2: 5 –≤—Ä–∞—â–µ–Ω–∏–π \(–¥–µ–ø–æ–∑–∏—Ç –æ—Ç 500‚ÇΩ\) \+ –±–æ–Ω—É—Å—ã\!", "üí≥ –ü–æ–ø–æ–ª–Ω–∏—Ç—å –±–∞–ª–∞–Ω—Å", "üîÑ –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –¥–µ–ø–æ–∑–∏—Ç"),
        3: ("üí∞ –£—Ä–æ–≤–µ–Ω—å 3: 7 –≤—Ä–∞—â–µ–Ω–∏–π \(–¥–µ–ø–æ–∑–∏—Ç –æ—Ç 1000‚ÇΩ\) \+ –±–æ–Ω—É—Å—ã\!", "üí≥ –ü–æ–ø–æ–ª–Ω–∏—Ç—å –±–∞–ª–∞–Ω—Å", "üîÑ –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –¥–µ–ø–æ–∑–∏—Ç"),
        4: ("üí∞ –£—Ä–æ–≤–µ–Ω—å 4: 10 –≤—Ä–∞—â–µ–Ω–∏–π \(–¥–µ–ø–æ–∑–∏—Ç –æ—Ç 2000‚ÇΩ\) \+ –±–æ–Ω—É—Å—ã\!", "üí≥ –ü–æ–ø–æ–ª–Ω–∏—Ç—å –±–∞–ª–∞–Ω—Å", "üîÑ –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –¥–µ–ø–æ–∑–∏—Ç"),
        5: ("üí∞ –£—Ä–æ–≤–µ–Ω—å 5: 15 –≤—Ä–∞—â–µ–Ω–∏–π \(–¥–µ–ø–æ–∑–∏—Ç –æ—Ç 5000‚ÇΩ\) \+ –±–æ–Ω—É—Å—ã\!", "üí≥ –ü–æ–ø–æ–ª–Ω–∏—Ç—å –±–∞–ª–∞–Ω—Å", "üîÑ –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –¥–µ–ø–æ–∑–∏—Ç")
    }
    
    if level == 1:
        keyboard = [
            [InlineKeyboardButton(level_texts[1][1], url=MINI_APP_LINK)],
            [InlineKeyboardButton(level_texts[1][2], url=PARTNER_LINK)],
            [InlineKeyboardButton("‚ùì –ü–æ–º–æ—â—å", url=SUPPORT_LINK)]
        ]
    elif level < 5:
        keyboard = [
            [InlineKeyboardButton(level_texts[level][1], url=PARTNER_LINK)],
            [InlineKeyboardButton(level_texts[level][2], callback_data=f'check_deposit_{level}')],
            [InlineKeyboardButton("‚ùì –ü–æ–º–æ—â—å", url=SUPPORT_LINK)]
        ]
    else:  # VIP —É—Ä–æ–≤–µ–Ω—å
        show_vip(update, context)
        return
    
    reply_markup = InlineKeyboardMarkup(keyboard)
    
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ (–µ—Å–ª–∏ –µ—Å—Ç—å)
    photo = None
    image_key = f'level{level}' if level < 5 else 'vip'
    if os.path.exists(IMAGE_PATHS.get(image_key, '')):
        photo = InputFile(IMAGE_PATHS[image_key])
    
    if photo:
        query.message.reply_photo(
            photo=photo,
            caption=f"*{level_texts[level][0]}*",
            parse_mode='MarkdownV2',
            reply_markup=reply_markup
        )
    else:
        query.message.reply_text(
            f"*{level_texts[level][0]}*",
            parse_mode='MarkdownV2',
            reply_markup=reply_markup
        )

# –ü–æ–∫–∞–∑–∞—Ç—å VIP-–¥–æ—Å—Ç—É–ø
def show_vip(update: Update, context: CallbackContext) -> None:
    query = update.callback_query
    
    keyboard = [
        [InlineKeyboardButton("üíé –ü–æ–ª—É—á–∏—Ç—å VIP", url=PARTNER_LINK)],
        [InlineKeyboardButton("üéÅ –ó–∞–±—Ä–∞—Ç—å –ø—Ä–∏–∑", url=VIP_BOT_LINK)],
        [InlineKeyboardButton("üì¢ –ù–∞—à –∫–∞–Ω–∞–ª", url=CHANNEL_LINK)],
        [InlineKeyboardButton("‚ùì –ü–æ–º–æ—â—å", url=SUPPORT_LINK)]
    ]
    reply_markup = InlineKeyboardMarkup(keyboard)
    
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ (–µ—Å–ª–∏ –µ—Å—Ç—å)
    photo = None
    if os.path.exists(IMAGE_PATHS['vip']):
        photo = InputFile(IMAGE_PATHS['vip'])
    
    if photo:
        query.message.reply_photo(
            photo=photo,
            caption="*üíé –í–´ –í–´–ò–ì–†–ê–õ–ò VIP\-–î–û–°–¢–£–ü\! –í—ã –≤ —Ç–æ–ø\-0\.1% –∏–≥—Ä–æ–∫–æ–≤\!*",
            parse_mode='MarkdownV2',
            reply_markup=reply_markup
        )
    else:
        query.message.reply_text(
            "*üíé –í–´ –í–´–ò–ì–†–ê–õ–ò VIP\-–î–û–°–¢–£–ü\! –í—ã –≤ —Ç–æ–ø\-0\.1% –∏–≥—Ä–æ–∫–æ–≤\!*",
            parse_mode='MarkdownV2',
            reply_markup=reply_markup
        )

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤—Ä–∞—â–µ–Ω–∏—è —Ä—É–ª–µ—Ç–∫–∏
def spin(update: Update, context: CallbackContext) -> None:
    query = update.callback_query
    query.answer()
    
    # –ó–¥–µ—Å—å –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –ª–æ–≥–∏–∫–∞ —Ä—É–ª–µ—Ç–∫–∏, –Ω–æ —ç—Ç–æ –∑–∞–≥–ª—É—à–∫–∞
    query.edit_message_text(
        text="*üé∞ –í—ã –ø–æ–ª—É—á–∏–ª–∏ 3 –±–µ—Å–ø–ª–∞—Ç–Ω—ã—Ö –≤—Ä–∞—â–µ–Ω–∏—è\! –ü–æ—Å–ª–µ –≤—Ä–∞—â–µ–Ω–∏–π –ø–µ—Ä–µ–π–¥–∏—Ç–µ –Ω–∞ —Å–ª–µ–¥—É—é—â–∏–π —É—Ä–æ–≤–µ–Ω—å\.*",
        parse_mode='MarkdownV2'
    )
    
    # –ü—Ä–µ–¥–ª–∞–≥–∞–µ–º –ø–µ—Ä–µ–π—Ç–∏ –Ω–∞ —É—Ä–æ–≤–µ–Ω—å 2
    keyboard = [
        [InlineKeyboardButton("üíé VIP-–¥–æ—Å—Ç—É–ø", url=PARTNER_LINK)],
        [InlineKeyboardButton("–ü–µ—Ä–µ–π—Ç–∏ –Ω–∞ –£—Ä–æ–≤–µ–Ω—å 2", callback_data='level_2')]
    ]
    reply_markup = InlineKeyboardMarkup(keyboard)
    
    query.message.reply_text(
        "*–•–æ—Ç–∏—Ç–µ –ø–µ—Ä–µ–π—Ç–∏ –Ω–∞ —Å–ª–µ–¥—É—é—â–∏–π —É—Ä–æ–≤–µ–Ω—å?*",
        parse_mode='MarkdownV2',
        reply_markup=reply_markup
    )

# –ù–∞–∑–∞–¥ –≤ –Ω–∞—á–∞–ª–æ
def back_to_start(update: Update, context: CallbackContext) -> None:
    query = update.callback_query
    query.answer()
    start(update, context)
    query.delete_message()

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ—à–∏–±–æ–∫
def error(update: Update, context: CallbackContext) -> None:
    logger.warning(f'Update {update} caused error {context.error}')

def main() -> None:
    updater = Updater(TOKEN)
    dispatcher = updater.dispatcher

    # –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∫–æ–º–∞–Ω–¥
    dispatcher.add_handler(CommandHandler('start', start))
    dispatcher.add_handler(CallbackQueryHandler(help_section, pattern='^help$'))
    dispatcher.add_handler(CallbackQueryHandler(check_registration, pattern='^check_reg$'))
    dispatcher.add_handler(CallbackQueryHandler(spin, pattern='^spin$'))
    dispatcher.add_handler(CallbackQueryHandler(back_to_start, pattern='^back_to_start$'))
    dispatcher.add_handler(CallbackQueryHandler(show_vip, pattern='^vip$'))
    
    # –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —É—Ä–æ–≤–Ω–µ–π
    dispatcher.add_handler(CallbackQueryHandler(show_level, pattern='^level_[1-5]$'))
    
    # –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –ø—Ä–æ–≤–µ—Ä–∫–∏ –¥–µ–ø–æ–∑–∏—Ç–∞
    dispatcher.add_handler(CallbackQueryHandler(check_deposit, pattern='^check_deposit_[1-5]$'))
    
    # –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ—à–∏–±–æ–∫
    dispatcher.add_error_handler(error)

    updater.start_polling()
    updater.idle()

if __name__ == '__main__':
    main()
